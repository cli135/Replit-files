"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseKGroup(ListNode head, int k) {\n        // base case; head is guaranteed to be non null\n        // end of list\n        if (head.next == null) {\n            return head;\n        }\n        // base case another, end of k-group\n        if (k == 1) {\n            // go reverse deeper while we're here\n            head.next = reverseKGroup(head.next, k);\n            \n        }  \n        // recursive case\n        head.next = reverseKGroup(head.next, k - 1);\n    }\n    private ListNode reverseKGroup(ListNode head, int k, ListNode localHead) {\n        ;\n    }\n}"