"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {\n        vector<vector<int>> paths = {{}};\n        // modify paths\n        pathSum(root, targetSum, paths);\n        return paths;\n    }\n    vector<vector<int>> pathSum(TreeNode* root, int targetSum, vector<vector<int>> & paths) {\n        if (root == nullptr) return paths;\n        // leaf just meets remaining total ==> add to paths\n        bool leaf = root->left == nullptr && root->right == nullptr;\n        if (leaf && root->val == targetSum) {\n            paths.push_back();\n        }\n    }\n};"