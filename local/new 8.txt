"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    // use long? not int?\n    int maxPathSum(TreeNode* root) {\n        \n    }\n    int maxPathSumStartingAt(TreeNode * root) {\n        if (root == nullptr) return 0;\n        // find maxPathSum starting here\n        int maxSum = root->val;\n        int leftSum = maxPathSum(root->left);\n        int rightSum = maxPathSum(root->right);\n        // only adding the biggest (l or r)\n        maxSum += max(leftSum, rightSum);\n        return maxSum;\n    }\n};"